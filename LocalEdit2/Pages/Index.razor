@page "/"
@using System.Collections.ObjectModel;

<PageTitle>Local Edit 2 - Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.
<p />
Add this to the deploy project  https://stackoverflow.com/questions/73687176/permission-denied-to-github-actionsbot-the-requested-url-returned-error-403
<p />
And this https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site

<LocalEdit2.Shared.GitInfoDisplay></LocalEdit2.Shared.GitInfoDisplay>

@*<WheelZoom Image="/mire.png" width="500" height="500" />*@

<Row>
    <Column>
        <Button Clicked="@OnAddNodeClick" Color="Color.Primary">Add node</Button>
    </Column>
    <Column>
        <TreeView Nodes="Items"
                  GetChildNodes="@(item => item.Children)"
                  HasChildNodes="@(item => item.Children?.Any() == true)"
        @bind-SelectedNode="selectedNode"
        @bind-ExpandedNodes="expandedNodes">
            <NodeContent>
                <Icon Name="IconName.Folder" />
                @context.Text
            </NodeContent>
        </TreeView>
    </Column>
</Row>
@code {
    private Task OnAddNodeClick()
    {
        //Items.Add(new Item { Text = $"Item {Items.Count + 1}" });

        if (Items[0].Children == null)
        {
            Items[0].Children = new[] { new Item { Text = $"Item a 1" } };
        }
        else
        {
            Items[0].Children.Append<Item>(new Item { Text = $"Item a {Items[0].Children.Count() + 1}" });
        }

        return Task.CompletedTask;
    }

    public class Item
    {
        public string Text { get; set; }
        public IEnumerable<Item> Children { get; set; }
    }

    ObservableCollection<Item> Items = new()
    {
        new Item { Text = "Item 1" },
        new Item
        {
            Text = "Item 2",
            Children = new []
            {
                new Item { Text = "Item 2.1" },
                new Item
                {
                    Text = "Item 2.2",
                    Children = new []
                    {
                        new Item { Text = "Item 2.2.1" },
                        new Item { Text = "Item 2.2.2" },
                        new Item { Text = "Item 2.2.3" },
                        new Item { Text = "Item 2.2.4" }
                    }
                },
                new Item { Text = "Item 2.3" },
                new Item { Text = "Item 2.4" }
            }
        },
        new Item { Text = "Item 3" },
    };

    IList<Item> expandedNodes = new List<Item>();
    Item selectedNode;
}
